import { useContext, useState } from "react";
import { TimerContext } from "../contexts/TimerContext";

export default function ToggleButton() {
  const { handleTime, isRunning, taskIsSet } = useContext(TimerContext);
  const [isTooltipVisible, setIsTooltipVisible] = useState(false);

  const handleMouseEnter = () => {
    setIsTooltipVisible(true);
  };

  const handleMouseLeave = () => {
    setIsTooltipVisible(false);
  };
  return (
    <>
      <button
        className={`relative w-full font-bold text-[1rem] py-4 flex gap-2 justify-center align-middle rounded-lg ${
          !taskIsSet && "bg-brand-principal/70 "
        } ${isRunning ? "bg-red" : "bg-brand-principal"}`}
        onClick={() => handleTime(!isRunning)}
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
      >
        {isTooltipVisible && !taskIsSet && (
          <div className="bg-gray-dark absolute font-bold text-sm bottom-16 px-4 py-3 mb-2 rounded-md leading-6">
            Fill in the activity and duration before starting.
          </div>
        )}
        {isRunning ? (
          <svg
            width="18"
            height="25"
            viewBox="0 0 18 25"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M11.0455 3.47365C10.72 3.47365 10.4079 3.60444 10.1777 3.83725C9.94755 4.07005 9.81825 4.3858 9.81825 4.71503C9.81825 5.1721 9.45194 5.54262 9.00007 5.54262C8.5482 5.54262 8.18188 5.1721 8.18188 4.71503C8.18188 3.94682 8.48359 3.21007 9.02062 2.66686C9.55766 2.12365 10.286 1.81848 11.0455 1.81848C11.805 1.81848 12.5334 2.12365 13.0704 2.66686C13.6075 3.21007 13.9092 3.94682 13.9092 4.71503V10.9219C13.9092 11.379 13.5428 11.7495 13.091 11.7495C12.6391 11.7495 12.2728 11.379 12.2728 10.9219V4.71503C12.2728 4.3858 12.1435 4.07005 11.9133 3.83725C11.6832 3.60444 11.371 3.47365 11.0455 3.47365Z"
              fill="white"
            />
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M6.95446 1.81838C6.62896 1.81838 6.3168 1.94917 6.08664 2.18197C5.85649 2.41478 5.72718 2.73053 5.72718 3.05976V6.3701C5.72718 6.82717 5.36087 7.19769 4.909 7.19769C4.45713 7.19769 4.09082 6.82717 4.09082 6.3701V3.05976C4.09082 2.29155 4.39252 1.5548 4.92956 1.01159C5.4666 0.468379 6.19497 0.163208 6.95446 0.163208C7.71394 0.163208 8.44232 0.468379 8.97935 1.01159C9.51639 1.5548 9.81809 2.29155 9.81809 3.05976V10.0942C9.81809 10.5513 9.45178 10.9218 8.99991 10.9218C8.54804 10.9218 8.18173 10.5513 8.18173 10.0942V3.05976C8.18173 2.73053 8.05243 2.41478 7.82227 2.18197C7.59211 1.94917 7.27995 1.81838 6.95446 1.81838Z"
              fill="white"
            />
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M2.86364 5.12868C2.53814 5.12868 2.22598 5.25947 1.99582 5.49227C1.76567 5.72508 1.63636 6.04083 1.63636 6.37006V15.0597C1.63636 17.0351 2.41217 18.9296 3.79312 20.3264C5.17407 21.7233 7.04704 22.508 9 22.508C10.953 22.508 12.8259 21.7233 14.2069 20.3264C15.5878 18.9296 16.3636 17.0351 16.3636 15.0597V10.9218C16.3636 10.5926 16.2343 10.2768 16.0042 10.044C15.774 9.8112 15.4619 9.68041 15.1364 9.68041C14.8109 9.68041 14.4987 9.8112 14.2686 10.044C14.0384 10.2768 13.9091 10.5926 13.9091 10.9218V12.9908C13.9091 13.4478 13.5428 13.8183 13.0909 13.8183C12.2229 13.8183 11.3905 14.1671 10.7767 14.7879C10.163 15.4087 9.81818 16.2507 9.81818 17.1287C9.81818 17.5857 9.45187 17.9563 9 17.9563C8.54813 17.9563 8.18182 17.5857 8.18182 17.1287C8.18182 15.8117 8.69902 14.5487 9.61966 13.6175C10.3451 12.8837 11.2743 12.4033 12.2727 12.2326V10.9218C12.2727 10.1536 12.5744 9.41682 13.1115 8.87362C13.6485 8.33041 14.3769 8.02524 15.1364 8.02524C15.8958 8.02524 16.6242 8.33041 17.1613 8.87362C17.6983 9.41682 18 10.1536 18 10.9218V15.0597C18 17.4741 17.0518 19.7896 15.364 21.4968C13.6761 23.2041 11.3869 24.1632 9 24.1632C6.61305 24.1632 4.32387 23.2041 2.63604 21.4968C0.948212 19.7896 0 17.4741 0 15.0597V6.37006C0 5.60185 0.301704 4.8651 0.83874 4.32189C1.37578 3.77868 2.10415 3.47351 2.86364 3.47351C3.62312 3.47351 4.3515 3.77868 4.88853 4.32189C5.42557 4.8651 5.72727 5.60185 5.72727 6.37006V10.9218C5.72727 11.3789 5.36096 11.7494 4.90909 11.7494C4.45722 11.7494 4.09091 11.3789 4.09091 10.9218V6.37006C4.09091 6.04083 3.96161 5.72508 3.73145 5.49227C3.50129 5.25947 3.18913 5.12868 2.86364 5.12868Z"
              fill="white"
            />
          </svg>
        ) : (
          <svg
            width="20"
            height="24"
            viewBox="0 0 21 25"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className="fill-gray-title"
          >
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M1.4331 1.1468C1.71568 0.986878 2.03517 0.906396 2.35861 0.91366C2.68136 0.920907 2.99638 1.01527 3.27131 1.18702C3.27189 1.18739 3.27248 1.18776 3.27306 1.18812L19.6195 11.338C19.8868 11.5001 20.1083 11.7295 20.2626 12.0041C20.4182 12.2811 20.5 12.5944 20.5 12.9132C20.5 13.232 20.4182 13.5454 20.2626 13.8223C20.1083 14.0969 19.8868 14.3264 19.6195 14.4884L3.27306 24.6383C3.27238 24.6387 3.2717 24.6391 3.27103 24.6396C2.99616 24.8112 2.68125 24.9055 2.35861 24.9128C2.03517 24.92 1.71568 24.8395 1.4331 24.6796C1.15051 24.5197 0.915063 24.2861 0.751039 24.003C0.587015 23.7198 0.500356 23.3974 0.5 23.0689V2.75748C0.500356 2.429 0.587015 2.10657 0.751039 1.82343C0.915063 1.5403 1.15051 1.30673 1.4331 1.1468ZM19.15 12.1285L18.6811 12.907L18.687 12.9034C18.6854 12.9044 18.684 12.9058 18.6831 12.9075C18.6821 12.9092 18.6816 12.9112 18.6816 12.9132C18.6816 12.9152 18.6821 12.9172 18.6831 12.9189C18.6841 12.9207 18.6855 12.9221 18.6872 12.9231L19.15 12.1285ZM18.671 12.9132L2.3184 2.75953L2.3184 23.0669L2.32139 23.065L18.671 12.9132Z"
            />
          </svg>
        )}
        <span>{isRunning ? "Stop" : "Start"}</span>
      </button>
    </>
  );
}
